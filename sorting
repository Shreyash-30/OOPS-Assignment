#include <cstring>
#include <iostream>
using namespace std;
struct Student{
    int roll;
    float sgpa;
    char name[50];
};
class Sorting{
    private:
      Student s[15];
      int n;
      
    public :
     Sorting(void){
         n = 0;
     }
     void accept();
     void display();
     void sortRoll();
     void sortName();
     int partition(int low, int high);
     void qs(int low, int high);
     void sortTopper(int cnt);
     void searchSgpa(float a);
     void searchName(char name[50]);
};
void Sorting :: accept(void){
    cout<<"Enter no of students \n";
    cin>>n;
    for(int i = 0; i<n; i++){
        cout<<"Enter a Studetn info \n";
        cout<<"Enter student roll \n";
        cin>>s[i].roll;
        cout<<"Enter student sgpa \n";
        cin>>s[i].sgpa;
        cout<<"Enter student name \n";
        cin>>s[i].name;
    }
}
    void Sorting :: display(void){
        for(int i = 0; i < n; i++){
            cout<<"Student : "<< i+1<<"\n";
            cout<<"Name" << s[i].name<<"\n";
             cout<<"Roll no: "<< s[i].roll<<"\n";
              cout<<"Sgpa:" << s[i].sgpa<<"\n";
            
        }
    }
    void Sorting :: sortRoll(void){
        // bubble sort
        for(int i =n-1; i>=0; i--){
            for(int j = 0; j<i; j++){
                if(s[j].roll > s[j+1].roll){
                    Student temp = s[j];
                    s[j] = s[j+1];
                    s[j+1] = temp;
                }
            }
            
        }
    }
    void Sorting :: sortName(void){
        for(int i =0; i<=n; i++){
            int j = i;
            while(j>0 && strcmp(s[j-1].name, s[j].name) >0){
                Student temp = s[j];
                    s[j] = s[j-1];
                    s[j-1] = temp;
                    j--;
            }
            
            
        }
    }
    void Sorting :: searchSgpa(float a){
        bool flag= false;
        for(int i = 0; i <n; i++){
            if(s[i].sgpa == a){
                cout<<s[i].sgpa;
                flag = true;
            }
        }
        if(!flag){
            cout<<"Student with given sgpa not found";
        }
        
    }
    void Sorting :: sortTopper(int cnt){
        int low = 0;
        int high = n-1;
        qs(low, high);
        for(int i =0; i <cnt; i++){
            cout<<"Topper "<< i+1;
            cout<<s[i].name<<"\n";
            cout<<s[i].sgpa<<"\n";
        }
    }
      int Sorting ::  partition(int low, int high){
            
            float pivot = s[0].sgpa;
            int i = low;
            int j = high;
            while(i < j){
                while(s[i].sgpa<= pivot && i<=j){
                    i++;
                }
                while(s[j].sgpa> pivot && j>=low){
                    j--;
                }
                if(i < j){
                    Student temp = s[i];
                    s[i] = s[j];
                    s[j] = temp;
                }
            }
              Student temp = s[i];
                    s[i] = s[j];
                    s[j] = temp;
                    return j;
            
        }
    
        
        void Sorting :: qs(int low, int high ){
            if(low < high){
                int pi = partition(low, high);
                qs(low, pi-1);
                qs(pi+1, high);
            }
        }
        
    
    void Sorting :: searchName(char name[50]){
        sortName();
        int low = 0;
        int high = n-1;
        bool flag = true;
        while(low < high){
            int mid = (low + high) /2;
            if(strcmp(s[mid].name, name)== 0){
              cout<<"Name found";
              flag = false;
            }
            else if(strcmp(s[mid].name, name)<0){
                low = mid +1;
            }
            else{
                high = mid -1;
            }
        }
        if(!flag){
            cout<<"Name not found";
        }
#include <cstring>
#include <iostream>
using namespace std;
        
    }
#include <cstring>
#include <iostream>
using namespace std;
int main() {
    // Write C++ code here
  Sorting s;
  s.accept();
  s.display();
//   cout<<"sort by roll \n";
//   s.sortRoll();
//   s.display();
  
  cout<<"sort by name \n";
  s.sortName();
  s.display();
  cout<<"sgpa ";
  s.searchSgpa(6.0
  );
//   s.searchName('a');
//   s.sortTopper(2);
 
  
    return 0;
}
